buildPack: ml-python-gpu-service
pipelineConfig:
  agent:
    container: machine-learning-gpu
    label: jenkins-machine-learning-gpu
  pipelines:
    post: {}
    pullRequest:
      pipeline:
        options:
          containerOptions:
            env:
            - name: BUILDPACK_NAME
              value: ml-python-gpu-service
            - name: DOCKER_CONFIG
              value: /home/jenkins/.docker/
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  key: docker.registry
                  name: jenkins-x-docker-registry
            - name: GIT_AUTHOR_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_AUTHOR_NAME
              value: jenkins-x-bot
            - name: GIT_COMMITTER_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_COMMITTER_NAME
              value: jenkins-x-bot
            - name: JENKINS_URL
              value: http://jenkins:8080
            - name: XDG_CONFIG_HOME
              value: /home/jenkins
            name: ""
            resources:
              limits:
                cpu: "2"
                memory: 2Gi
              requests:
                cpu: "1"
                memory: 1Gi
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /home/jenkins
              name: workspace-volume
            - mountPath: /var/run/docker.sock
              name: docker-daemon
            - mountPath: /home/jenkins/.docker
              name: volume-0
          volumes:
          - emptyDir: {}
            name: workspace-volume
          - hostPath:
              path: /var/run/docker.sock
            name: docker-daemon
          - name: volume-0
            secret:
              secretName: jenkins-docker-cfg
        stages:
        - agent:
            image: machine-learning-gpu
          dir: /workspace/source
          name: from-build-pack
          steps:
          - command: source /root/.bashrc && git lfs install && git lfs pull
            dir: /workspace/source
            image: machine-learning-gpu
            name: build-step2
          - command: source /root/.bashrc && flake8
            dir: /workspace/source
            image: machine-learning-gpu
            name: build-flake8
          - command: source /root/.bashrc && pytest
            dir: /workspace/source
            image: machine-learning-gpu
            name: build-testing
          - command: /usr/local/bin/exec-sonar-scanner.sh
            args:
            - -s http://jx-sonarqube.sonarqube.svc.cluster.local:9000
            - -k 12345
            - -r true
            - -p true
            image: gcr.io/jx-mar19/jx-app-sonar-scanner:0.0.0-unset
            name: sonar-scanner
          - command: /kaniko/executor --cache=true --cache-dir=/workspace --context=/workspace/source
              --dockerfile=/workspace/source/Dockerfile --destination=gcr.io/jx-mar19/test326-service:${inputs.params.version}
              --cache-repo=gcr.io/jx-mar19/cache
            dir: /workspace/source
            image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
            name: build-step5
          - command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:$PREVIEW_VERSION
            dir: /workspace/source
            image: machine-learning-gpu
            name: postbuild-step6
          - command: make preview
            dir: /workspace/source/charts/preview
            image: machine-learning-gpu
            name: promote-step7
          - command: jx preview --app $APP_NAME --dir ../..
            dir: /workspace/source/charts/preview
            image: machine-learning-gpu
            name: promote-step8
    release:
      pipeline:
        options:
          containerOptions:
            env:
            - name: BUILDPACK_NAME
              value: ml-python-gpu-service
            - name: DOCKER_CONFIG
              value: /home/jenkins/.docker/
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  key: docker.registry
                  name: jenkins-x-docker-registry
            - name: GIT_AUTHOR_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_AUTHOR_NAME
              value: jenkins-x-bot
            - name: GIT_COMMITTER_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_COMMITTER_NAME
              value: jenkins-x-bot
            - name: JENKINS_URL
              value: http://jenkins:8080
            - name: XDG_CONFIG_HOME
              value: /home/jenkins
            name: ""
            resources:
              limits:
                cpu: "2"
                memory: 2Gi
              requests:
                cpu: "1"
                memory: 1Gi
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /home/jenkins
              name: workspace-volume
            - mountPath: /var/run/docker.sock
              name: docker-daemon
            - mountPath: /home/jenkins/.docker
              name: volume-0
          volumes:
          - emptyDir: {}
            name: workspace-volume
          - hostPath:
              path: /var/run/docker.sock
            name: docker-daemon
          - name: volume-0
            secret:
              secretName: jenkins-docker-cfg
        stages:
        - agent:
            image: machine-learning-gpu
          dir: /workspace/source
          name: from-build-pack
          steps:
          - command: jx step git credentials
            dir: /workspace/source
            image: machine-learning-gpu
            name: setup-jx-git-credentials
          - command: git lfs install && git lfs pull
            dir: /workspace/source
            image: machine-learning-gpu
            name: setup-step3
          - command: source /root/.bashrc && flake8
            dir: /workspace/source
            image: machine-learning-gpu
            name: build-flake8
          - command: source /root/.bashrc && pytest
            dir: /workspace/source
            image: machine-learning-gpu
            name: build-testing
          - command: /usr/local/bin/exec-sonar-scanner.sh
            args:
            - -s http://jx-sonarqube.sonarqube.svc.cluster.local:9000
            - -k 12345
            - -r true
            - -p true
            image: gcr.io/jx-mar19/jx-app-sonar-scanner:0.0.0-unset
            name: sonar-scanner
          - command: /kaniko/executor --cache=true --cache-dir=/workspace --context=/workspace/source
              --dockerfile=/workspace/source/Dockerfile --destination=gcr.io/jx-mar19/test326-service:${inputs.params.version}
              --cache-repo=gcr.io/jx-mar19/cache
            dir: /workspace/source
            image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
            name: build-step6
          - command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:${VERSION}
            dir: /workspace/source
            image: machine-learning-gpu
            name: build-step7
          - command: jx step changelog --version v${VERSION}
            dir: /workspace/source/charts/test326-service
            image: machine-learning-gpu
            name: promote-step8
          - command: jx step helm release
            dir: /workspace/source/charts/test326-service
            image: machine-learning-gpu
            name: promote-step9
          - command: jx promote -b --all-auto --timeout 1h --version ${VERSION}
            dir: /workspace/source/charts/test326-service
            image: machine-learning-gpu
            name: promote-step10
      setVersion:
        steps:
        - image: machine-learning-gpu
          steps:
          - comment: so we can retrieve the version in later steps
            sh: echo \$(jx-release-version) > VERSION
          - sh: jx step tag --version \$(cat VERSION)

