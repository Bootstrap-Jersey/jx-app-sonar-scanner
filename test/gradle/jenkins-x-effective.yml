buildPack: gradle
pipelineConfig:
  agent:
    image: gradle
    label: jenkins-gradle
  extends:
    file: gradle/pipeline.yaml
    import: classic
  pipelines:
    post: {}
    pullRequest:
      pipeline:
        options:
          containerOptions:
            env:
            - name: DOCKER_CONFIG
              value: /home/jenkins/.docker/
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  key: docker.registry
                  name: jenkins-x-docker-registry
            - name: GIT_AUTHOR_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_AUTHOR_NAME
              value: jenkins-x-bot
            - name: GIT_COMMITTER_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_COMMITTER_NAME
              value: jenkins-x-bot
            - name: JENKINS_URL
              value: http://jenkins:8080
            - name: XDG_CONFIG_HOME
              value: /home/jenkins
            - name: _JAVA_OPTIONS
              value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
                -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5
                -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
                -Xms10m -Xmx192m
            name: ""
            resources:
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 400m
                memory: 512Mi
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /home/jenkins
              name: workspace-volume
            - mountPath: /var/run/docker.sock
              name: docker-daemon
            - mountPath: /home/jenkins/.docker
              name: volume-0
            - mountPath: /home/jenkins/.gnupg
              name: volume-1
          volumes:
          - emptyDir: {}
            name: workspace-volume
          - hostPath:
              path: /var/run/docker.sock
            name: docker-daemon
          - name: volume-0
            secret:
              secretName: jenkins-docker-cfg
          - name: volume-1
            secret:
              secretName: jenkins-release-gpg
        stages:
        - agent:
            image: gradle
          dir: /workspace/source
          name: from-build-pack
          steps:
          - command: gradle clean build
            dir: /workspace/source
            image: gradle
            name: build-gradle-build
          - command: /kaniko/executor --cache=true --cache-dir=/workspace --context=/workspace/source
              --dockerfile=/workspace/source/Dockerfile --destination=gcr.io/jx-mar19/sq-angular:${inputs.params.version}
              --cache-repo=gcr.io/jx-mar19/cache
            dir: /workspace/source
            image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
            name: build-container-build
          - command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:$PREVIEW_VERSION
            dir: /workspace/source
            image: gradle
            name: postbuild-post-build
          - command: make preview
            dir: /workspace/source/charts/preview
            image: gradle
            name: promote-make-preview
          - command: jx preview --app $APP_NAME --dir ../..
            dir: /workspace/source/charts/preview
            image: gradle
            name: promote-jx-preview
    release:
      pipeline:
        options:
          containerOptions:
            env:
            - name: DOCKER_CONFIG
              value: /home/jenkins/.docker/
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  key: docker.registry
                  name: jenkins-x-docker-registry
            - name: GIT_AUTHOR_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_AUTHOR_NAME
              value: jenkins-x-bot
            - name: GIT_COMMITTER_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_COMMITTER_NAME
              value: jenkins-x-bot
            - name: JENKINS_URL
              value: http://jenkins:8080
            - name: XDG_CONFIG_HOME
              value: /home/jenkins
            - name: _JAVA_OPTIONS
              value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
                -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5
                -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
                -Xms10m -Xmx192m
            name: ""
            resources:
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 400m
                memory: 512Mi
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /home/jenkins
              name: workspace-volume
            - mountPath: /var/run/docker.sock
              name: docker-daemon
            - mountPath: /home/jenkins/.docker
              name: volume-0
            - mountPath: /home/jenkins/.gnupg
              name: volume-1
          volumes:
          - emptyDir: {}
            name: workspace-volume
          - hostPath:
              path: /var/run/docker.sock
            name: docker-daemon
          - name: volume-0
            secret:
              secretName: jenkins-docker-cfg
          - name: volume-1
            secret:
              secretName: jenkins-release-gpg
        stages:
        - agent:
            image: gradle
          dir: /workspace/source
          name: from-build-pack
          steps:
          - command: jx step git credentials
            dir: /workspace/source
            image: gradle
            name: setup-jx-git-credentials
          - command: gradle clean build
            dir: /workspace/source
            image: gradle
            name: build-gradle-build
          - command: /kaniko/executor --cache=true --cache-dir=/workspace --context=/workspace/source
              --dockerfile=/workspace/source/Dockerfile --destination=gcr.io/jx-mar19/sq-angular:${inputs.params.version}
              --cache-repo=gcr.io/jx-mar19/cache
            dir: /workspace/source
            image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
            name: build-container-build
          - command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:${VERSION}
            dir: /workspace/source
            image: gradle
            name: build-post-build
          - command: jx step changelog --version v${VERSION}
            dir: /workspace/source/charts/sq-angular
            image: gradle
            name: promote-changelog
          - command: jx step helm release
            dir: /workspace/source/charts/sq-angular
            image: gradle
            name: promote-helm-release
          - command: jx promote -b --all-auto --timeout 1h --version ${VERSION}
            dir: /workspace/source/charts/sq-angular
            image: gradle
            name: promote-jx-promote
      setVersion:
        steps:
        - image: gradle
          steps:
          - comment: so we can retrieve the version in later steps
            name: next-version
            sh: echo \$(jx-release-version) > VERSION
          - name: tag-version
            sh: jx step tag --version \$(cat VERSION)
