buildPack: go
pipelineConfig:
  agent:
    dir: /home/jenkins/go/src/REPLACE_ME_GIT_PROVIDER/REPLACE_ME_ORG/REPLACE_ME_APP_NAME
    label: jenkins-go
  extends:
    file: go/pipeline.yaml
    import: classic
  pipelines:
    pullRequest:
      pipeline:
        agent: {}
        options:
          containerOptions:
            env:
            - name: DOCKER_CONFIG
              value: /home/jenkins/.docker/
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  key: docker.registry
                  name: jenkins-x-docker-registry
            - name: GIT_AUTHOR_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_AUTHOR_NAME
              value: jenkins-x-bot
            - name: GIT_COMMITTER_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_COMMITTER_NAME
              value: jenkins-x-bot
            - name: JENKINS_URL
              value: http://jenkins:8080
            - name: XDG_CONFIG_HOME
              value: /home/jenkins
            name: ""
            resources:
              limits:
                cpu: "1"
                memory: 1448Mi
              requests:
                cpu: 400m
                memory: 600Mi
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /home/jenkins
              name: workspace-volume
            - mountPath: /var/run/docker.sock
              name: docker-daemon
            - mountPath: /home/jenkins/.docker
              name: volume-0
          timeout:
            time: 0
        stages:
        - agent:
            image: go
          name: from-build-pack
          options:
            stash:
              files: ""
              name: ""
            timeout:
              time: 0
            unstash:
              name: ""
          steps:
          - agent: {}
            command: make linux
            dir: /workspace/source
            image: go
            loop:
              steps: null
              values: null
              variable: ""
            name: build-make-linux
          - agent: {}
            args:
            - -s http://jx-sonarqube.sonarqube.svc.cluster.local:9000
            - -k 12345
            - -r true
            - -p true
            command: exec-sonar-scanner.sh
            image: gcr.io/jx-mar19/jx-app-sonar-scanner:0.0.0-unset
            loop:
              steps: null
              values: null
              variable: ""
            name: sonar-scanner
          - agent: {}
            command: /kaniko/executor --cache=true --cache-dir=/workspace --context=/workspace/source
              --dockerfile=/workspace/source/Dockerfile --destination=gcr.io/jx-mar19/test322:${inputs.params.version}
              --cache-repo=gcr.io/jx-mar19/cache
            dir: /workspace/source
            image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
            loop:
              steps: null
              values: null
              variable: ""
            name: build-container-build
          - agent: {}
            command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:$PREVIEW_VERSION
            dir: /workspace/source
            image: go
            loop:
              steps: null
              values: null
              variable: ""
            name: postbuild-post-build
          - agent: {}
            command: make preview
            dir: /workspace/source/charts/preview
            image: go
            loop:
              steps: null
              values: null
              variable: ""
            name: promote-make-preview
          - agent: {}
            command: jx preview --app $APP_NAME --dir ../..
            dir: /workspace/source/charts/preview
            image: go
            loop:
              steps: null
              values: null
              variable: ""
            name: promote-jx-preview
    release:
      pipeline:
        agent: {}
        options:
          containerOptions:
            env:
            - name: DOCKER_CONFIG
              value: /home/jenkins/.docker/
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  key: docker.registry
                  name: jenkins-x-docker-registry
            - name: GIT_AUTHOR_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_AUTHOR_NAME
              value: jenkins-x-bot
            - name: GIT_COMMITTER_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_COMMITTER_NAME
              value: jenkins-x-bot
            - name: JENKINS_URL
              value: http://jenkins:8080
            - name: XDG_CONFIG_HOME
              value: /home/jenkins
            name: ""
            resources:
              limits:
                cpu: "1"
                memory: 1448Mi
              requests:
                cpu: 400m
                memory: 600Mi
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /home/jenkins
              name: workspace-volume
            - mountPath: /var/run/docker.sock
              name: docker-daemon
            - mountPath: /home/jenkins/.docker
              name: volume-0
          timeout:
            time: 0
        stages:
        - agent:
            image: go
          name: from-build-pack
          options:
            stash:
              files: ""
              name: ""
            timeout:
              time: 0
            unstash:
              name: ""
          steps:
          - agent: {}
            command: jx step git credentials
            dir: /workspace/source
            image: go
            loop:
              steps: null
              values: null
              variable: ""
            name: setup-jx-git-credentials
          - agent: {}
            command: make build
            dir: /workspace/source
            image: go
            loop:
              steps: null
              values: null
              variable: ""
            name: build-make-build
          - agent: {}
            args:
            - -s http://jx-sonarqube.sonarqube.svc.cluster.local:9000
            - -k 12345
            - -r true
            - -p true
            command: exec-sonar-scanner.sh
            image: gcr.io/jx-mar19/jx-app-sonar-scanner:0.0.0-unset
            loop:
              steps: null
              values: null
              variable: ""
            name: sonar-scanner
          - agent: {}
            command: /kaniko/executor --cache=true --cache-dir=/workspace --context=/workspace/source
              --dockerfile=/workspace/source/Dockerfile --destination=gcr.io/jx-mar19/test322:${inputs.params.version}
              --cache-repo=gcr.io/jx-mar19/cache
            dir: /workspace/source
            image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
            loop:
              steps: null
              values: null
              variable: ""
            name: build-container-build
          - agent: {}
            command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:${VERSION}
            dir: /workspace/source
            image: go
            loop:
              steps: null
              values: null
              variable: ""
            name: build-post-build
          - agent: {}
            command: jx step changelog --version v${VERSION}
            dir: /workspace/source/charts/test322
            image: go
            loop:
              steps: null
              values: null
              variable: ""
            name: promote-changelog
          - agent: {}
            command: jx step helm release
            dir: /workspace/source/charts/test322
            image: go
            loop:
              steps: null
              values: null
              variable: ""
            name: promote-helm-release
          - agent: {}
            command: jx promote -b --all-auto --timeout 1h --version ${VERSION}
            dir: /workspace/source/charts/test322
            image: go
            loop:
              steps: null
              values: null
              variable: ""
            name: promote-jx-promote
      setVersion:
        steps:
        - steps:
          - dir: /home/jenkins/go/src/REPLACE_ME_GIT_PROVIDER/REPLACE_ME_ORG/REPLACE_ME_APP_NAME
            steps:
            - comment: so we can retrieve the version in later steps
              name: next-version
              sh: echo \$(jx-release-version) > VERSION
            - name: tag-version
              sh: jx step tag --version \$(cat VERSION)
